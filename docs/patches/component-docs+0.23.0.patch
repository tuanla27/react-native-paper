diff --git a/node_modules/component-docs/.DS_Store b/node_modules/component-docs/.DS_Store
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/component-docs/dist/css/src/templates/Documentation.css b/node_modules/component-docs/dist/css/src/templates/Documentation.css
index d6c5189..e384ebf 100644
--- a/node_modules/component-docs/dist/css/src/templates/Documentation.css
+++ b/node_modules/component-docs/dist/css/src/templates/Documentation.css
@@ -1,6 +1,8 @@
 .Title_t1dytcq5{margin-top:0;}
 .MarkdownContent_m3ctz2y p:first-of-type{margin-top:0;}.MarkdownContent_m3ctz2y p:last-of-type{margin-bottom:0;}
 .PropInfo_p1eats2g{margin:14px 0;}
-.PropLabel_psi127e{display:block;color:inherit;font-size:18px;margin:24px 0 8px 0;-webkit-text-decoration:none;text-decoration:none;white-space:nowrap;}.PropLabel_psi127e:hover{color:inherit;}.PropLabel_psi127e > code{font-size:inherit;background-color:transparent;border:0;}
-.PropItem_pwdtv5j{margin:8px 0;}.PropItem_pwdtv5j > code{font-size:inherit;white-space:normal;}
-.RestPropsLabel_r5pwgte{display:block;margin:24px 0 8px 0;}
+.PropLabelWrapper_psi127e{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:24px 0 8px 0;}
+.PropLabel_pwdtv5j{display:block;color:inherit;font-size:18px;-webkit-text-decoration:none;text-decoration:none;white-space:nowrap;}.PropLabel_pwdtv5j:hover{color:inherit;}.PropLabel_pwdtv5j > code{font-size:inherit;background-color:transparent;border:0;}
+.PropItem_p5pwgte{margin:8px 0;}.PropItem_p5pwgte > code{font-size:inherit;white-space:normal;}
+.RestPropsLabel_rxjt4wc{display:block;margin:24px 0 8px 0;}
+.Badge_b9qtvtp{border-radius:15px;border-color:var(--b9qtvtp-0);background-color:var(--b9qtvtp-1);border-style:solid;border-width:1px;font-weight:600;text-align:center;padding:4px 8px;font-size:smaller;margin-left:8px;}.dark-theme .Badge_b9qtvtp{background-color:var(--b9qtvtp-2);}
diff --git a/node_modules/component-docs/dist/templates/Documentation.js b/node_modules/component-docs/dist/templates/Documentation.js
index 1984fb3..9c6ff87 100644
--- a/node_modules/component-docs/dist/templates/Documentation.js
+++ b/node_modules/component-docs/dist/templates/Documentation.js
@@ -9,6 +9,8 @@ var React = _interopRequireWildcard(require("react"));
 
 var _react2 = require("linaria/react");
 
+var _color = _interopRequireDefault(require("color"));
+
 var _Content = _interopRequireDefault(require("./Content"));
 
 var _Markdown = _interopRequireDefault(require("./Markdown"));
@@ -47,28 +49,46 @@ const PropInfo =
   name: "PropInfo",
   class: "PropInfo_p1eats2g"
 });
+const PropLabelWrapper =
+/*#__PURE__*/
+(0, _react2.styled)("div")({
+  name: "PropLabelWrapper",
+  class: "PropLabelWrapper_psi127e"
+});
 const PropLabel =
 /*#__PURE__*/
 (0, _react2.styled)("a")({
   name: "PropLabel",
-  class: "PropLabel_psi127e"
+  class: "PropLabel_pwdtv5j"
 });
 const PropItem =
 /*#__PURE__*/
 (0, _react2.styled)("div")({
   name: "PropItem",
-  class: "PropItem_pwdtv5j"
+  class: "PropItem_p5pwgte"
 });
 const RestPropsLabel =
 /*#__PURE__*/
 (0, _react2.styled)("a")({
   name: "RestPropsLabel",
-  class: "RestPropsLabel_r5pwgte"
+  class: "RestPropsLabel_rxjt4wc"
+});
+const Badge =
+/*#__PURE__*/
+(0, _react2.styled)("div")({
+  name: "Badge",
+  class: "Badge_b9qtvtp",
+  vars: {
+    "b9qtvtp-0": [props => props.color],
+    "b9qtvtp-1": [props => (0, _color.default)(props.color).alpha(0.13).rgb().string()],
+    "b9qtvtp-2": [props => (0, _color.default)(props.color).alpha(0.29).rgb().string()]
+  }
 });
 const REACT_STATIC_METHODS = ['getDerivedStateFromProps'];
 const ANNOTATION_OPTIONAL = '@optional';
 const ANNOTATION_INTERNAL = '@internal';
 const ANNOTATION_EXTENDS = '@extends';
+const ANNOTATION_BADGE = '@badge';
 
 const getTypeName = type => type.raw || type.name || '';
 
@@ -89,12 +109,15 @@ const PropTypeDoc = ({
   const isRequired = required && defaultValue == null && !description.startsWith(ANNOTATION_OPTIONAL);
   const typeName = // eslint-disable-next-line no-nested-ternary
   flowType ? getTypeName(flowType) : tsType ? getTypeName(tsType) : type ? getTypeName(type) : null;
-  return React.createElement(PropInfo, null, React.createElement(PropLabel, {
+  const badge = description && description.startsWith(ANNOTATION_BADGE) ? JSON.parse(description.substring(description.indexOf('{'), description.lastIndexOf('}') + 1).trim()) : null;
+  return React.createElement(PropInfo, null, React.createElement(PropLabelWrapper, null, React.createElement(PropLabel, {
     name: name,
     href: `#${name}`
-  }, React.createElement("code", null, name), isRequired ? ' (required)' : ''), typeName && typeName !== 'unknown' ? React.createElement(PropItem, null, React.createElement("span", null, "Type: "), React.createElement("code", null, typeName)) : null, defaultValue ? React.createElement(PropItem, null, React.createElement("span", null, "Default value: "), React.createElement("code", null, defaultValue.value)) : null, description ? React.createElement(PropItem, {
+  }, React.createElement("code", null, name), isRequired ? ' (required)' : ''), badge && React.createElement(Badge, {
+    color: badge.color
+  }, badge.label)), typeName && typeName !== 'unknown' ? React.createElement(PropItem, null, React.createElement("span", null, "Type: "), React.createElement("code", null, typeName)) : null, defaultValue ? React.createElement(PropItem, null, React.createElement("span", null, "Default value: "), React.createElement("code", null, defaultValue.value)) : null, description ? React.createElement(PropItem, {
     as: MarkdownContent,
-    source: description.replace(/^@optional/, '').trim()
+    source: description.replace(/^@optional/, '').replace(/^@badge(.+)}/, '').trim()
   }) : null);
 };
 
diff --git a/node_modules/component-docs/dist/templates/Documentation.js.map b/node_modules/component-docs/dist/templates/Documentation.js.map
index 28dd6e1..e93a833 100644
--- a/node_modules/component-docs/dist/templates/Documentation.js.map
+++ b/node_modules/component-docs/dist/templates/Documentation.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../src/templates/Documentation.js"],"names":["Title","MarkdownContent","Markdown","PropInfo","PropLabel","PropItem","RestPropsLabel","REACT_STATIC_METHODS","ANNOTATION_OPTIONAL","ANNOTATION_INTERNAL","ANNOTATION_EXTENDS","getTypeName","type","raw","name","hasAnnotation","item","annotation","description","startsWith","docblock","pascalToCamelCase","text","replace","$1","toLowerCase","PropTypeDoc","flowType","tsType","required","defaultValue","isRequired","typeName","value","trim","MethodDoc","params","returns","length","map","p","join","PropertyDoc","link","Documentation","info","logo","github","filepath","restProps","split","filter","line","parts","slice","pop","push","props","keys","Object","prop","methods","method","modifiers","includes","statics","concat","linkify","s"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { styled } from 'linaria/react';\nimport Content from './Content';\nimport Markdown from './Markdown';\nimport EditButton from './EditButton';\nimport type { TypeAnnotation, Docs } from '../types';\n\ntype Props = {\n  name: string,\n  info: Docs,\n  filepath: string,\n  logo?: string,\n  github?: string,\n};\n\nconst Title = styled.h1`\n  margin-top: 0;\n`;\n\nconst MarkdownContent = styled(Markdown)`\n  p:first-of-type {\n    margin-top: 0;\n  }\n\n  p:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nconst PropInfo = styled.div`\n  margin: 14px 0;\n`;\n\nconst PropLabel = styled.a`\n  display: block;\n  color: inherit;\n  font-size: 18px;\n  margin: 24px 0 8px 0;\n  text-decoration: none;\n  white-space: nowrap;\n\n  &:hover {\n    color: inherit;\n  }\n\n  & > code {\n    font-size: inherit;\n    background-color: transparent;\n    border: 0;\n  }\n`;\n\nconst PropItem = styled.div`\n  margin: 8px 0;\n\n  & > code {\n    font-size: inherit;\n    white-space: normal;\n  }\n`;\n\nconst RestPropsLabel = styled.a`\n  display: block;\n  margin: 24px 0 8px 0;\n`;\n\nconst REACT_STATIC_METHODS = ['getDerivedStateFromProps'];\n\nconst ANNOTATION_OPTIONAL = '@optional';\nconst ANNOTATION_INTERNAL = '@internal';\nconst ANNOTATION_EXTENDS = '@extends';\n\nconst getTypeName = (type: TypeAnnotation) => type.raw || type.name || '';\n\nconst hasAnnotation = (item: any, annotation: string) =>\n  // eslint-disable-next-line no-nested-ternary\n  item.description\n    ? item.description.startsWith(annotation)\n    : item.docblock\n    ? item.docblock.startsWith(annotation)\n    : false;\n\nconst pascalToCamelCase = (text: string) =>\n  text.replace(/^[A-Z]+/g, $1 => $1.toLowerCase());\n\nconst PropTypeDoc = ({\n  name,\n  description,\n  flowType,\n  tsType,\n  type,\n  required,\n  defaultValue,\n}: *) => {\n  const isRequired =\n    required &&\n    defaultValue == null &&\n    !description.startsWith(ANNOTATION_OPTIONAL);\n\n  const typeName =\n    // eslint-disable-next-line no-nested-ternary\n    flowType\n      ? getTypeName(flowType)\n      : tsType\n      ? getTypeName(tsType)\n      : type\n      ? getTypeName(type)\n      : null;\n\n  return (\n    <PropInfo>\n      <PropLabel name={name} href={`#${name}`}>\n        <code>{name}</code>\n        {isRequired ? ' (required)' : ''}\n      </PropLabel>\n      {typeName && typeName !== 'unknown' ? (\n        <PropItem>\n          <span>Type: </span>\n          <code>{typeName}</code>\n        </PropItem>\n      ) : null}\n      {defaultValue ? (\n        <PropItem>\n          <span>Default value: </span>\n          <code>{defaultValue.value}</code>\n        </PropItem>\n      ) : null}\n      {description ? (\n        <PropItem\n          as={MarkdownContent}\n          source={description.replace(/^@optional/, '').trim()}\n        />\n      ) : null}\n    </PropInfo>\n  );\n};\n\nconst MethodDoc = ({ name, description, type, params, returns }) => {\n  const typeName = type ? getTypeName(type) : null;\n\n  return (\n    <PropInfo key={name}>\n      <PropLabel name={name} href={`#${name}`}>\n        <code>{name}</code>\n      </PropLabel>\n\n      {typeName && typeName !== 'unknown' ? (\n        <PropItem>\n          <span>Type: </span>\n          <code>{typeName}</code>\n        </PropItem>\n      ) : null}\n      {params.length ? (\n        <PropItem>\n          <span>Params: </span>\n          <code>\n            {params\n              .map(p => `${p.name}${p.type ? `: ${getTypeName(p.type)}` : ''}`)\n              .join(', ')}\n          </code>\n        </PropItem>\n      ) : null}\n      {returns && returns.type ? (\n        <PropItem>\n          <span>Returns: </span>\n          <code>{getTypeName(returns.type)}</code>\n        </PropItem>\n      ) : null}\n      {description ? (\n        <PropItem as={MarkdownContent} source={description.trim()} />\n      ) : null}\n    </PropInfo>\n  );\n};\n\nconst PropertyDoc = ({ name, description, type, value, link }: *) => {\n  const typeName = type ? getTypeName(type) : null;\n\n  return (\n    <PropInfo>\n      <PropLabel\n        name={name}\n        href={`${typeName === 'static' && link ? `${link}` : `#${name}`}`}\n      >\n        <code>{name}</code>\n      </PropLabel>\n      {typeName && typeName !== 'unknown' ? (\n        <PropItem>\n          <span>Type: </span>\n          <code>{typeName}</code>\n        </PropItem>\n      ) : null}\n      {typeof value === 'string' || typeof value === 'number' ? (\n        <PropItem>\n          <span>Value: </span>\n          <code>{value}</code>\n        </PropItem>\n      ) : null}\n      {description ? (\n        <PropItem\n          as={MarkdownContent}\n          source={description.replace(/^@optional/, '').trim()}\n        />\n      ) : null}\n    </PropInfo>\n  );\n};\n\nexport default function Documentation({\n  name,\n  info,\n  logo,\n  github,\n  filepath,\n}: Props) {\n  const restProps = [];\n  const description = info.description\n    .split('\\n')\n    .filter(line => {\n      if (line.startsWith(ANNOTATION_EXTENDS)) {\n        const parts = line.split(' ').slice(1);\n        const link = parts.pop();\n        restProps.push({\n          name: parts.join(' '),\n          link,\n        });\n        return false;\n      }\n      return true;\n    })\n    .join('\\n');\n\n  const props = info.props || {};\n\n  const keys = Object.keys(props).filter(\n    prop => !hasAnnotation(props[prop], ANNOTATION_INTERNAL)\n  );\n  const methods = info.methods.filter(\n    method =>\n      !(\n        method.name.startsWith('_') ||\n        method.modifiers.includes('static') ||\n        method.docblock == null ||\n        hasAnnotation(method, ANNOTATION_INTERNAL)\n      )\n  );\n  const statics = info.statics\n    .map(prop => ({\n      type: 'property',\n      info: prop,\n    }))\n    .concat(\n      info.methods\n        .filter(\n          method =>\n            method.modifiers.includes('static') &&\n            method.docblock != null &&\n            !REACT_STATIC_METHODS.includes(method.name)\n        )\n        .map(method => ({\n          type: 'method',\n          info: {\n            ...method,\n            type: { raw: 'Function' },\n          },\n        }))\n    )\n    .filter(\n      item =>\n        !(\n          item.info.name.startsWith('_') ||\n          hasAnnotation(item.info, ANNOTATION_INTERNAL)\n        )\n    );\n\n  return (\n    <Content logo={logo}>\n      <Title>{name}</Title>\n      <MarkdownContent source={description} options={{ linkify: true }} />\n      {keys.length || restProps.length ? (\n        <React.Fragment>\n          <h2>Props</h2>\n          {keys.map(prop => (\n            <PropTypeDoc key={prop} name={prop} {...props[prop]} />\n          ))}\n          {restProps.map(prop => (\n            <RestPropsLabel key={prop.name} href={prop.link}>\n              <code>\n                ...\n                {prop.name}\n              </code>\n            </RestPropsLabel>\n          ))}\n        </React.Fragment>\n      ) : null}\n      {methods.length ? (\n        <React.Fragment>\n          <h2>Methods</h2>\n          <p>\n            These methods can be accessed on the <code>ref</code> of the\n            component, e.g.{' '}\n            <code>\n              {pascalToCamelCase(name)}\n              Ref.\n              {methods[0].name}\n              (...args)\n            </code>\n            .\n          </p>\n          {methods.map(method => (\n            <MethodDoc key={method.name} type={null} {...method} />\n          ))}\n        </React.Fragment>\n      ) : null}\n      {statics.length ? (\n        <React.Fragment>\n          <h2>Static properties</h2>\n          <p>\n            These properties can be accessed on <code>{name}</code> by using the\n            dot notation, e.g.{' '}\n            <code>\n              {name}.{statics[0].info.name}\n            </code>\n            .\n          </p>\n          {statics.map(s => {\n            if (s.type === 'method') {\n              return <MethodDoc key={s.info.name} {...s.info} />;\n            }\n\n            return <PropertyDoc key={s.info.name} {...s.info} />;\n          })}\n        </React.Fragment>\n      ) : null}\n      <EditButton github={github} filepath={filepath} />\n    </Content>\n  );\n}\n"],"file":"Documentation.js"}
\ No newline at end of file
+{"version":3,"sources":["../../src/templates/Documentation.js"],"names":["Title","MarkdownContent","Markdown","PropInfo","PropLabelWrapper","PropLabel","PropItem","RestPropsLabel","Badge","props","color","alpha","rgb","string","REACT_STATIC_METHODS","ANNOTATION_OPTIONAL","ANNOTATION_INTERNAL","ANNOTATION_EXTENDS","ANNOTATION_BADGE","getTypeName","type","raw","name","hasAnnotation","item","annotation","description","startsWith","docblock","pascalToCamelCase","text","replace","$1","toLowerCase","PropTypeDoc","flowType","tsType","required","defaultValue","isRequired","typeName","badge","JSON","parse","substring","indexOf","lastIndexOf","trim","label","value","MethodDoc","params","returns","length","map","p","join","PropertyDoc","link","Documentation","info","logo","github","filepath","restProps","split","filter","line","parts","slice","pop","push","keys","Object","prop","methods","method","modifiers","includes","statics","concat","linkify","s"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { styled } from 'linaria/react';\nimport color from 'color';\nimport type { TypeAnnotation, Docs } from '../types';\nimport Content from './Content';\nimport Markdown from './Markdown';\nimport EditButton from './EditButton';\n\ntype Props = {\n  name: string,\n  info: Docs,\n  filepath: string,\n  logo?: string,\n  github?: string,\n};\n\nconst Title = styled.h1`\n  margin-top: 0;\n`;\n\nconst MarkdownContent = styled(Markdown)`\n  p:first-of-type {\n    margin-top: 0;\n  }\n\n  p:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nconst PropInfo = styled.div`\n  margin: 14px 0;\n`;\n\nconst PropLabelWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  margin: 24px 0 8px 0;\n`;\n\nconst PropLabel = styled.a`\n  display: block;\n  color: inherit;\n  font-size: 18px;\n  text-decoration: none;\n  white-space: nowrap;\n\n  &:hover {\n    color: inherit;\n  }\n\n  & > code {\n    font-size: inherit;\n    background-color: transparent;\n    border: 0;\n  }\n`;\n\nconst PropItem = styled.div`\n  margin: 8px 0;\n\n  & > code {\n    font-size: inherit;\n    white-space: normal;\n  }\n`;\n\nconst RestPropsLabel = styled.a`\n  display: block;\n  margin: 24px 0 8px 0;\n`;\n\nconst Badge = styled.div`\n  border-radius: 15px;\n  border-color: ${props => props.color};\n  background-color: ${props =>\n    color(props.color)\n      .alpha(0.13)\n      .rgb()\n      .string()};\n  border-style: solid;\n  border-width: 1px;\n  font-weight: 600;\n  text-align: center;\n  padding: 4px 8px;\n  font-size: smaller;\n  margin-left: 8px;\n\n  .dark-theme & {\n    background-color: ${props =>\n      color(props.color)\n        .alpha(0.29)\n        .rgb()\n        .string()};\n  }\n`;\n\nconst REACT_STATIC_METHODS = ['getDerivedStateFromProps'];\n\nconst ANNOTATION_OPTIONAL = '@optional';\nconst ANNOTATION_INTERNAL = '@internal';\nconst ANNOTATION_EXTENDS = '@extends';\nconst ANNOTATION_BADGE = '@badge';\n\nconst getTypeName = (type: TypeAnnotation) => type.raw || type.name || '';\n\nconst hasAnnotation = (item: any, annotation: string) =>\n  // eslint-disable-next-line no-nested-ternary\n  item.description\n    ? item.description.startsWith(annotation)\n    : item.docblock\n    ? item.docblock.startsWith(annotation)\n    : false;\n\nconst pascalToCamelCase = (text: string) =>\n  text.replace(/^[A-Z]+/g, $1 => $1.toLowerCase());\n\nconst PropTypeDoc = ({\n  name,\n  description,\n  flowType,\n  tsType,\n  type,\n  required,\n  defaultValue,\n}: *) => {\n  const isRequired =\n    required &&\n    defaultValue == null &&\n    !description.startsWith(ANNOTATION_OPTIONAL);\n\n  const typeName =\n    // eslint-disable-next-line no-nested-ternary\n    flowType\n      ? getTypeName(flowType)\n      : tsType\n      ? getTypeName(tsType)\n      : type\n      ? getTypeName(type)\n      : null;\n\n  const badge =\n    description && description.startsWith(ANNOTATION_BADGE)\n      ? JSON.parse(\n          description\n            .substring(\n              description.indexOf('{'),\n              description.lastIndexOf('}') + 1\n            )\n            .trim()\n        )\n      : null;\n\n  return (\n    <PropInfo>\n      <PropLabelWrapper>\n        <PropLabel name={name} href={`#${name}`}>\n          <code>{name}</code>\n          {isRequired ? ' (required)' : ''}\n        </PropLabel>\n        {badge && <Badge color={badge.color}>{badge.label}</Badge>}\n      </PropLabelWrapper>\n      {typeName && typeName !== 'unknown' ? (\n        <PropItem>\n          <span>Type: </span>\n          <code>{typeName}</code>\n        </PropItem>\n      ) : null}\n      {defaultValue ? (\n        <PropItem>\n          <span>Default value: </span>\n          <code>{defaultValue.value}</code>\n        </PropItem>\n      ) : null}\n      {description ? (\n        <PropItem\n          as={MarkdownContent}\n          source={description\n            .replace(/^@optional/, '')\n            .replace(/^@badge(.+)}/, '')\n            .trim()}\n        />\n      ) : null}\n    </PropInfo>\n  );\n};\n\nconst MethodDoc = ({ name, description, type, params, returns }) => {\n  const typeName = type ? getTypeName(type) : null;\n\n  return (\n    <PropInfo key={name}>\n      <PropLabel name={name} href={`#${name}`}>\n        <code>{name}</code>\n      </PropLabel>\n\n      {typeName && typeName !== 'unknown' ? (\n        <PropItem>\n          <span>Type: </span>\n          <code>{typeName}</code>\n        </PropItem>\n      ) : null}\n      {params.length ? (\n        <PropItem>\n          <span>Params: </span>\n          <code>\n            {params\n              .map(p => `${p.name}${p.type ? `: ${getTypeName(p.type)}` : ''}`)\n              .join(', ')}\n          </code>\n        </PropItem>\n      ) : null}\n      {returns && returns.type ? (\n        <PropItem>\n          <span>Returns: </span>\n          <code>{getTypeName(returns.type)}</code>\n        </PropItem>\n      ) : null}\n      {description ? (\n        <PropItem as={MarkdownContent} source={description.trim()} />\n      ) : null}\n    </PropInfo>\n  );\n};\n\nconst PropertyDoc = ({ name, description, type, value, link }: *) => {\n  const typeName = type ? getTypeName(type) : null;\n\n  return (\n    <PropInfo>\n      <PropLabel\n        name={name}\n        href={`${typeName === 'static' && link ? `${link}` : `#${name}`}`}\n      >\n        <code>{name}</code>\n      </PropLabel>\n      {typeName && typeName !== 'unknown' ? (\n        <PropItem>\n          <span>Type: </span>\n          <code>{typeName}</code>\n        </PropItem>\n      ) : null}\n      {typeof value === 'string' || typeof value === 'number' ? (\n        <PropItem>\n          <span>Value: </span>\n          <code>{value}</code>\n        </PropItem>\n      ) : null}\n      {description ? (\n        <PropItem\n          as={MarkdownContent}\n          source={description.replace(/^@optional/, '').trim()}\n        />\n      ) : null}\n    </PropInfo>\n  );\n};\n\nexport default function Documentation({\n  name,\n  info,\n  logo,\n  github,\n  filepath,\n}: Props) {\n  const restProps = [];\n  const description = info.description\n    .split('\\n')\n    .filter(line => {\n      if (line.startsWith(ANNOTATION_EXTENDS)) {\n        const parts = line.split(' ').slice(1);\n        const link = parts.pop();\n        restProps.push({\n          name: parts.join(' '),\n          link,\n        });\n        return false;\n      }\n      return true;\n    })\n    .join('\\n');\n\n  const props = info.props || {};\n\n  const keys = Object.keys(props).filter(\n    prop => !hasAnnotation(props[prop], ANNOTATION_INTERNAL)\n  );\n  const methods = info.methods.filter(\n    method =>\n      !(\n        method.name.startsWith('_') ||\n        method.modifiers.includes('static') ||\n        method.docblock == null ||\n        hasAnnotation(method, ANNOTATION_INTERNAL)\n      )\n  );\n  const statics = info.statics\n    .map(prop => ({\n      type: 'property',\n      info: prop,\n    }))\n    .concat(\n      info.methods\n        .filter(\n          method =>\n            method.modifiers.includes('static') &&\n            method.docblock != null &&\n            !REACT_STATIC_METHODS.includes(method.name)\n        )\n        .map(method => ({\n          type: 'method',\n          info: {\n            ...method,\n            type: { raw: 'Function' },\n          },\n        }))\n    )\n    .filter(\n      item =>\n        !(\n          item.info.name.startsWith('_') ||\n          hasAnnotation(item.info, ANNOTATION_INTERNAL)\n        )\n    );\n\n  return (\n    <Content logo={logo}>\n      <Title>{name}</Title>\n      <MarkdownContent source={description} options={{ linkify: true }} />\n      {keys.length || restProps.length ? (\n        <React.Fragment>\n          <h2>Props</h2>\n          {keys.map(prop => (\n            <PropTypeDoc key={prop} name={prop} {...props[prop]} />\n          ))}\n          {restProps.map(prop => (\n            <RestPropsLabel key={prop.name} href={prop.link}>\n              <code>\n                ...\n                {prop.name}\n              </code>\n            </RestPropsLabel>\n          ))}\n        </React.Fragment>\n      ) : null}\n      {methods.length ? (\n        <React.Fragment>\n          <h2>Methods</h2>\n          <p>\n            These methods can be accessed on the <code>ref</code> of the\n            component, e.g.{' '}\n            <code>\n              {pascalToCamelCase(name)}\n              Ref.\n              {methods[0].name}\n              (...args)\n            </code>\n            .\n          </p>\n          {methods.map(method => (\n            <MethodDoc key={method.name} type={null} {...method} />\n          ))}\n        </React.Fragment>\n      ) : null}\n      {statics.length ? (\n        <React.Fragment>\n          <h2>Static properties</h2>\n          <p>\n            These properties can be accessed on <code>{name}</code> by using the\n            dot notation, e.g.{' '}\n            <code>\n              {name}.{statics[0].info.name}\n            </code>\n            .\n          </p>\n          {statics.map(s => {\n            if (s.type === 'method') {\n              return <MethodDoc key={s.info.name} {...s.info} />;\n            }\n\n            return <PropertyDoc key={s.info.name} {...s.info} />;\n          })}\n        </React.Fragment>\n      ) : null}\n      <EditButton github={github} filepath={filepath} />\n    </Content>\n  );\n}\n"],"file":"Documentation.js"}
\ No newline at end of file
